<%= content_tag :div,
  nil,
  id: "game",
  data: {
    position: @field.position.flatten,
    valid_moves: @field.valid_moves,
  } %>
<table id="board"></table>

<table class="movements">
  <tr>
    <td> <%= render 'movement', m: @field.wmovement.first.flatten %> </td>
    <td> <%= render 'movement', m: @field.wmovement.last.flatten  %> </td>
  </tr>
</table>

<table class="movements">
  <tr>
    <td> <%= render 'movement', m: @field.mmovement.flatten %> </td>
  </tr>
</table>


<table class="movements">
  <tr>
    <td> <%= render 'movement', m: @field.bmovement.first.flatten %> </td>
    <td> <%= render 'movement', m: @field.bmovement.last.flatten  %> </td>
  </tr>
</table>

<script>
  // create board
  var bo = jsboard.board({attach:"game", size:"5x5"});
  bo.cell("each").style({width:"45px", height:"50px"});

  // setup pieces
  var bs = jsboard.piece({ text: "bs", width:"50px", height:"50px", fontsize: "40px", textAlign: "center", margin:"0 auto" });
  var ws = jsboard.piece({ text: "ws", width:"50px", height:"50px", fontsize: "40px", textAlign: "center", margin:"0 auto" });
  var wc = jsboard.piece({ text: "wc", width:"50px", height:"50px", fontsize: "40px", textAlign: "center", margin:"0 auto" });
  var bc = jsboard.piece({ text: "bc", width:"50px", height:"50px", fontsize: "40px", textAlign: "center", margin:"0 auto" });

  $("#game").data("position").forEach(function(d, i){
    x = Math.floor(i / 5);
    y = (i % 5);
    if (true) {
      if (d != "--") {
        piece = this[d].clone();
        window.piece = piece;
        $(piece).addClass(d);
        piece.addEventListener("click", function(){ showMoves2(this); })
        bo.cell([x,y]).place(piece);
      }
    }
  });

  // show new locations
  function showMoves2(piece) {

      // parentNode is needed because the piece you are clicking 
      // on doesn't have access to cell functions, therefore you 
      // need to access the parent of the piece because pieces are 
      // always contained within in cells
      var loc = bo.cell(piece.parentNode).where();
      window.loc = loc;

      /*
      var newLocs = [
          [loc[0]-1,loc[1]-2], [loc[0]-1,loc[1]+2],
          [loc[0]-2,loc[1]-1], [loc[0]-2,loc[1]+1],
          [loc[0]+1,loc[1]-2], [loc[0]+1,loc[1]+2],
          [loc[0]+2,loc[1]-1], [loc[0]+2,loc[1]+1]
      ];
      */
      var newLocs = $("#game").data("valid-moves")["["+loc[0]+", "+loc[1]+"]"]
      window.newLocs = newLocs;

      // locations to move to 
      // to use JavaScript DOM functions such as classList you need
      // to get the DOM node from the board which you can do by
      // calling cell([x,y]).DOM() or cell(this).DOM()
      for (var i=0; i<newLocs.length; i++) {
          bo.cell(newLocs[i]).DOM().classList.add("green");
          bo.cell(newLocs[i]).on("click", movePiece2);
      }

      // move piece to new location when clicked
      function movePiece2() {
        var old_position = bo.cell(piece.parentElement).where();
        var new_position = bo.cell(this).where();

        console.log("m" + old_position + "->" + new_position);
        window.p = piece;
          bo.cell(this).place(piece);
          bo.removeEvents("click", movePiece2);
          for (var i=0; i<newLocs.length; i++) 
              bo.cell(newLocs[i]).DOM().classList.remove("green");
      }
  }
</script>
