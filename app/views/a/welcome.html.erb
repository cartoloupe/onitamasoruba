<%= content_tag :div, nil, id: "game", data: { position: @field.position.flatten } %>
<div id="gome"></div>
<table id="board"></table>

<table class="movements">
  <tr>
    <td> <%= render 'movement', m: @field.wmovement.first.flatten %> </td>
    <td> <%= render 'movement', m: @field.wmovement.last.flatten  %> </td>
  </tr>
</table>


<table width="60%">
  <tr>
    <td width="20%"> <%= render 'movement', m: @field.mmovement.flatten %> </td>
    <td width="35%"> <%= render 'board', m: @field.position.flatten %> </td>
    <td width="20%"> <%= render 'movement', m: @field.mmovement.flatten %> </td>
  </tr>
</table>


<table class="movements">
  <tr>
    <td> <%= render 'movement', m: @field.bmovement.first.flatten %> </td>
    <td> <%= render 'movement', m: @field.bmovement.last.flatten  %> </td>
  </tr>
</table>

<script>
/*
  var b = jsboard.board({attach: "game", size: "5x5"});
  b.cell("each").style({width: "45px", height: "50px"})

  window.b = b
  var bs = jsboard.piece({ text: "bs", fontSize: "40px", textAlign: "center"  });
  var ws = jsboard.piece({ text: "ws", fontSize: "40px", textAlign: "center"  });
  var wc = jsboard.piece({ text: "wc", fontSize: "40px", textAlign: "center"  });
  var bc = jsboard.piece({ text: "bc", fontSize: "40px", textAlign: "center"  });

  $("#game").data("position").forEach(function(d, i){
    x = Math.floor(i / 5);
    y = (i % 5);
    if (false) {
      if (d == "ws"){
        piece = ws.clone();
        piece.addEventListener("click", function(){ showMoves(this); })
        b.cell([x,y]).place(piece);
      } else if (d == "bs") {
        piece = bs.clone();
        piece.addEventListener("click", function(){ showMoves(this); })
        b.cell([x,y]).place(piece);
      } else if (d == "wc") {
        piece = wc.clone();
        piece.addEventListener("click", function(){ showMoves(this); })
        b.cell([x,y]).place(piece);
      } else if (d == "bc") {
        piece = bc.clone();
        piece.addEventListener("click", function(){ showMoves(this); })
        b.cell([x,y]).place(piece);
      }
    }
  });

  piece = ws.clone();
  piece.addEventListener("click", function sm(){ showMoves(this, sm); })
  b.cell([0,1]).place(piece);

  piece = bs.clone();
  piece.addEventListener("click", function sm(){ showMoves(this, sm); });
  //piece.removeEventListener("click", function sm(){ showMoves(this); });
  b.cell([2,3]).place(piece);

  piece = wc.clone();
  b.cell([0,4]).place(piece);


  function showMoves(piece, sm){
    console.log("func showMoves");
    b.cell([0,4]).on("click", movePiece);
    piece.removeEventListener("click", sm);

    function movePiece(){
      b.removeEvents("click", sm);
      b.cell([0,4]).rid();
      b.cell(this).place(piece);
      //b.cell([0,4]).DOM().classList.remove("green");
    }
  }


*/

  // create board
  var bo = jsboard.board({attach:"gome", size:"8x8"});
  bo.cell("each").style({width:"65px", height:"65px"});

  // setup pieces
  var knight = jsboard.piece({text:"WK", width:"50px", height:"50px", margin:"0 auto" });
  var opp    = jsboard.piece({text:"BK", width:"50px", height:"50px", margin:"0 auto" });

  // create pieces to place in DOM
  var k = knight.clone();
  var o = opp.clone();

  // place pieces on board
  bo.cell([5,5]).place(k);
  bo.cell([2,3]).place(o);

  // give functionality to knights
  k.addEventListener("click", function() { showMoves2(this); });
  o.addEventListener("click", function() { showMoves2(this); });

  // show new locations 
  function showMoves2(piece) {

      // parentNode is needed because the piece you are clicking 
      // on doesn't have access to cell functions, therefore you 
      // need to access the parent of the piece because pieces are 
      // always contained within in cells
      var loc = bo.cell(piece.parentNode).where();
      var newLocs = [
          [loc[0]-1,loc[1]-2], [loc[0]-1,loc[1]+2],
          [loc[0]-2,loc[1]-1], [loc[0]-2,loc[1]+1],
          [loc[0]+1,loc[1]-2], [loc[0]+1,loc[1]+2],
          [loc[0]+2,loc[1]-1], [loc[0]+2,loc[1]+1]
      ];

      // locations to move to 
      // to use JavaScript DOM functions such as classList you need
      // to get the DOM node from the board which you can do by
      // calling cell([x,y]).DOM() or cell(this).DOM()
      for (var i=0; i<newLocs.length; i++) {
          bo.cell(newLocs[i]).DOM().classList.add("green");
          bo.cell(newLocs[i]).on("click", movePiece2);
      }

      // move piece to new location when clicked
      function movePiece2() {
          bo.cell(this).place(piece);
          bo.removeEvents("click", movePiece2);
          for (var i=0; i<newLocs.length; i++) 
              bo.cell(newLocs[i]).DOM().classList.remove("green");
      }
  }
/*
  */
</script>
